package com.farm.ibot.init;

import com.farm.ibot.core.reflection.Hook;

import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;

public class Hooks {
    public static int DEFAULT_ACTION_ARG7 = 0;
    public static int CLICK_ACTION_ARG_7 = 0;
    public static HashMap<String, Hook> hooks = new HashMap();
    private static HashMap<String, String> dreamBotHooks = new HashMap();
    private static HashMap<String, String> runeliteHooks = new HashMap();

    public static Hook forName(String name) {
        Hook hook = (Hook) hooks.get(name);
        return hook == null ? null : hook;
    }

    public static void load() throws Exception {
        dreamBotHooks = new HashMap();
        runeliteHooks = new HashMap();
        loadDreambot();
        loadRunelite();
        initializeHooks();
    }

    private static void loadRunelite() throws Exception {
        BufferedReader reader = new BufferedReader(new FileReader(Settings.HOOKS_RUNELITE));

        while (true) {
            String line;
            while ((line = reader.readLine()) != null) {
                String hookName;
                String hookValue;
                if (!line.startsWith("@") && !line.startsWith("#")) {
                    if (line.length() > 0 && line.split("\\.").length > 0) {
                        hookName = line.substring(0, line.split(" ")[0].length());
                        hookValue = line.substring(hookName.length() + 1);
                        runeliteHooks.put(hookName, hookValue);
                    }
                } else if (line.contains("identified as: ")) {
                    hookName = line.split(" identified as: ")[0].substring(1);
                    hookValue = line.split("identified as: ")[1];
                    runeliteHooks.put(hookName, hookValue);
                }
            }

            reader.close();
            return;
        }
    }

    private static void loadDreambot() throws Exception {
        BufferedReader reader = new BufferedReader(new FileReader(Settings.HOOKS_DREAMBOT));

        while (true) {
            String line;
            while ((line = reader.readLine()) != null) {
                String hookName;
                if (!line.startsWith("@") && !line.startsWith("#")) {
                    if (line.length() > 0 && line.split(" ").length > 0) {
                        hookName = line.substring(0, line.split(" ")[0].length());
                        String hookValue = line.substring(hookName.length() + 1);
                        dreamBotHooks.put(hookName, hookValue);
                    }
                } else if (line.contains("identified as: ")) {
                    hookName = "createAndSaveClass(\"" + line.split("identified as: ")[1] + "\", \"" + line.split(" identified as: ")[0].substring(1) + "\");";
                }
            }

            reader.close();
            return;
        }
    }

    public static Hook create(String realName, String data, int method) {
        data = data.replaceAll("\\.", " ");
        String className = data.split(" ")[0];
        String fieldName = "";
        Number i = -1;
        if (data.split(" ").length > 1) {
            fieldName = data.split(" ")[1];
        }

        if (data.split(" ").length > 2) {
            String str = data.split(" ")[2];
            if (str.contains("L")) {
                i = Long.parseLong(data.split(" ")[2].replaceAll("L", ""));
            } else {
                i = Integer.parseInt(data.split(" ")[2]);
            }
        }

        return new Hook(realName, className + (fieldName.length() > 0 ? "." + fieldName : ""), (Number) i, method);
    }

    public static Hook create(String realName, String data) {
        return create(realName, data, 0);
    }

    public static Hook createClass(String realName, String data) {
        return create(realName, data, 2);
    }

    private static Hook createClassFromRunelite(String ourName, String runeliteName) {
        if (runeliteHooks.get(runeliteName) != null) {
            return create(ourName, (String) runeliteHooks.get(runeliteName), 2);
        } else {

            return null;
        }
    }

    private static Hook createFromDreambot(String realName, String data) {
        if (dreamBotHooks.get(data) != null) {
            return create(realName, (String) dreamBotHooks.get(data), 0);
        } else {

            return null;
        }
    }

    public static Hook createFromRunelite(String realName, String data) {
        if (runeliteHooks.get(data) != null) {
            return data.contains("()") ? create(realName, (String) runeliteHooks.get(data), 1) : create(realName, (String) runeliteHooks.get(data), 0);
        } else {
            return null;
        }
    }

    private static void initializeHooks() {
        Hook[] hooks = new Hook[]{create("Client.lowCpuEnabled", "client.lowCpuEnabled"), create("Client.lockLowCpuUntil", "client.lockLowCpuUntil"), create("Client.mouseTracker", "kg.cc"), createFromRunelite("Client.processMenuAction", "SecureRandomCallable.menuAction()"), createFromRunelite("Client.switchToWorld", "Canvas.changeWorld()"), createFromRunelite("Client.zoom", "Client.viewportZoom"), createFromRunelite("Client.viewportWidth", "Client.viewportWidth"), createFromRunelite("Client.viewportHeight", "Client.viewportHeight"), createFromRunelite("Client.viewportOffsetX", "Client.viewportOffsetX"), createFromRunelite("Client.viewportOffsetY", "Client.viewportOffsetY"), createFromRunelite("MouseTracker.xCoordinates", "MouseRecorder.xs"), createFromRunelite("MouseTracker.yCoordinates", "MouseRecorder.ys"), createFromRunelite("MouseTracker.times", "MouseRecorder.millis"), createFromRunelite("MouseTracker.currentIndex", "MouseRecorder.index"), createClassFromRunelite("Client.draw", "Client.draw()"), createClassFromRunelite("GameShell.renderGame", "GameShell.graphicsTick()"), createClassFromRunelite("MachineInfo", "DesktopPlatformInfoProvider"), createFromRunelite("Client.lowMemory", "Client.isLowDetail"), createFromRunelite("Region.checkClick", "Scene.checkClick"), createFromRunelite("Scene.drawTile", "Scene.drawTile()"), createFromRunelite("Scene.menuOpen", "Scene.menuOpen()"), createFromRunelite("NpcComposite.RealIds", "NPCDefinition.transforms"), createFromRunelite("Region.minLevel", "Scene.minPlane"), createFromRunelite("GameShell.instance", "GameShell.gameShell"), createFromRunelite("Character.npcCycle", "Actor.npcCycle"), createFromRunelite("World.playerCount", "World.population"), createFromRunelite("World.type", "World.properties"), createFromRunelite("World.id", "World.id"), createFromRunelite("MachineInfo.instance", "Client.platformInfoProvider"), createFromRunelite("Stream.writeInt", "Buffer.writeShort()"), createFromRunelite("SocketWrapper.sendPacket", "PacketWriter.addNode()"), createFromRunelite("SocketWrapper.isaacCipher", "PacketWriter.isaacCipher"), createFromRunelite("PacketHolder.packet", "PacketBufferNode.packetBuffer"), createFromDreambot("HealthBar.data", "HealthBar.data"), createFromDreambot("HealthBarData.currentHealth", "HealthBarData.currentHealth"), createFromDreambot("EncryptedStream.isaac", "Packet.cipher"), createFromDreambot("Client.worlds", "Client.worlds"), createFromDreambot("Client.zoomExact", "Client.zoomExact"), createFromDreambot("Client.loginAccountState", "Client.accountStatus"), createFromDreambot("Client.socketWrapper", "Client.socketWrapper"), createFromDreambot("Client.GameCycle", "Client.gameCycle"), createFromDreambot("Stream.position", "Stream.offset"), createFromDreambot("Stream.byteArray", "Stream.payload"), createFromDreambot("GameShell.crashed", "GameShell.crashed"), createFromDreambot("GrandExchangeItem.Id", "GrandExchangeItem.id"), createFromDreambot("GrandExchangeItem.Amount", "GrandExchangeItem.amount"), createFromDreambot("GrandExchangeItem.State", "GrandExchangeItem.byte"), createFromDreambot("GrandExchangeItem.Price", "GrandExchangeItem.price"), createFromDreambot("GrandExchangeItem.Items", "Client.grandExchangeItems"), createFromDreambot("GroundItem.Id", "Item.id"), createFromDreambot("GroundItem.Amount", "Item.stackSize"), createFromDreambot("GroundItems.List", "Client.groundItemList"), createFromDreambot("LinkedList.Tail", "LinkedList.tail"), createFromDreambot("LinkedList.Current", "LinkedList.current"), createFromDreambot("Menu.ActionNames", "Client.menuOptions"), createFromDreambot("Menu.Actions", "Client.menuActions"), createFromDreambot("Menu.Count", "Client.menuCount"), createFromDreambot("Menu.Height", "Client.menuHeight"), createFromDreambot("Menu.Opcodes", "Client.menuOpcodes"), createFromDreambot("Menu.Options", "Client.menuOptions"), createFromDreambot("Menu.Variable", "Client.menuVariable"), createFromDreambot("Menu.Visible", "Client.menuVisible"), createFromDreambot("Menu.Width", "Client.menuWidth"), createFromDreambot("Menu.X", "Client.menuX"), createFromDreambot("Menu.XInteractions", "Client.menuXInteractions"), createFromDreambot("Menu.Y", "Client.menuY"), createFromDreambot("Menu.YInteractions", "Client.menuYInteractions"), createFromDreambot("HashTable.Size", "HashTable.size"), createFromDreambot("WidgetNode.Uid", "WidgetNode.id"), createFromDreambot("WidgetNode.Cache", "Client.widgetNodes"), createFromDreambot("Node.Uid", "Node.id"), createFromDreambot("Node.Next", "Node.next"), createFromDreambot("Node.Previous", "Node.previous"), createFromDreambot("Widget.X", "Widget.x"), createFromDreambot("Widget.Y", "Widget.y"), createFromDreambot("Widget.Widgets", "Client.widgets"), createFromDreambot("Widget.Text", "Widget.text"), createFromDreambot("Widget.X", "Widget.x"), createFromDreambot("Widget.Y", "Widget.y"), createFromDreambot("Widget.Width", "Widget.width"), createFromDreambot("Widget.Height", "Widget.height"), createFromDreambot("Widget.ParentUid", "Widget.parentId"), createFromDreambot("Widget.Hidden", "Widget.hidden"), createFromDreambot("Widget.Index", "Widget.boundsIndex"), createFromDreambot("Widget.WidgetBoundsX", "Client.widgetBoundsX"), createFromDreambot("Widget.WidgetBoundsY", "Client.widgetBoundsY"), createFromDreambot("Widget.Type", "Widget.type"), createFromDreambot("Widget.Id", "Widget.id"), createFromDreambot("Widget.ItemId", "Widget.itemId"), createFromDreambot("Widget.ItemAmount", "Widget.itemStackSize"), createFromDreambot("Widget.ItemIds", "Widget.slotIds"), createFromDreambot("Widget.ItemAmounts", "Widget.slotStackSizes"), createFromDreambot("Widget.Children", "Widget.children"), createFromDreambot("Widget.ScrollX", "Widget.scrollX"), createFromDreambot("Widget.ScrollY", "Widget.scrollY"), createFromDreambot("Widget.scrollMax", "Widget.scrollMax"), createFromDreambot("Widget.parent", "Widget.parent"), createFromDreambot("Widget.Actions", "Widget.actions"), createFromDreambot("Widget.TextureId", "Widget.textureId"), createFromDreambot("Widget.LoopCycle", "Widget.loopCycle"), createFromDreambot("Widget.textColor", "Widget.textColor"), createFromDreambot("NpcComposite.Id", "NpcComposite.id"), createFromDreambot("NpcComposite.Name", "NpcComposite.name"), createFromDreambot("NpcComposite.Actions", "NpcComposite.actions"), createFromDreambot("Projectile.X", "Projectile.x"), createFromDreambot("Projectile.Y", "Projectile.y"), createFromDreambot("Projectile.ProjectileList", "Client.projectiles"), createFromDreambot("Projectile.ModelHeight", "Projectile.heightOffset"), createFromDreambot("Projectile.id", "Projectile.id"), createFromDreambot("Npc.LocalNpcs", "Client.localNPCs"), createFromDreambot("Npc.Composite", "Npc.composite"), createFromDreambot("Model.IndicesLength", "Model.indicesLength"), createFromDreambot("Model.IndicesX", "Model.indicesX"), createFromDreambot("Model.IndicesY", "Model.indicesY"), createFromDreambot("Model.IndicesZ", "Model.indicesZ"), createFromDreambot("Model.VectorSkin", "Model.vectorSkin"), createFromDreambot("Model.VerticesLength", "Model.verticesLength"), createFromDreambot("Model.VerticesX", "Model.verticesX"), createFromDreambot("Model.VerticesY", "Model.verticesY"), createFromDreambot("Model.VerticesZ", "Model.verticesZ"), createFromDreambot("Camera.Pitch", "Client.cameraPitch"), createFromDreambot("Camera.Yaw", "Client.cameraYaw"), createFromDreambot("Camera.X", "Client.cameraX"), createFromDreambot("Camera.Y", "Client.cameraY"), createFromDreambot("Camera.Z", "Client.cameraZ"), createFromDreambot("ItemLayer.bottom", "ItemLayer.bottom"), createFromDreambot("ItemLayer.flag", "ItemLayer.flag"), createFromDreambot("ItemLayer.height", "ItemLayer.height"), createFromDreambot("ItemLayer.middle", "ItemLayer.middle"), createFromDreambot("ItemLayer.plane", "ItemLayer.plane"), createFromDreambot("ItemLayer.top", "ItemLayer.top"), createFromDreambot("ItemLayer.x", "ItemLayer.x"), createFromDreambot("ItemLayer.y", "ItemLayer.y"), createFromDreambot("RegionTile.ItemLayer", "Tile.itemLayer"), createFromDreambot("RegionTile.X", "Tile.x"), createFromDreambot("RegionTile.Y", "Tile.y"), createFromDreambot("RegionTile.Z", "Tile.plane"), createFromDreambot("RegionTile.FloorObject", "Tile.floor"), createFromDreambot("RegionTile.GameObjects", "Tile.objects"), createFromDreambot("RegionTile.BoundaryObject", "Tile.boundary"), createFromDreambot("RegionTile.WallObject", "Tile.wall"), createFromDreambot("Region.Region", "Client.region"), createFromDreambot("Region.Tiles", "Region.tiles"), createFromDreambot("Region.FocusedX", "Region.focusedX"), createFromDreambot("Region.FocusedY", "Region.focusedY"), createFromDreambot("Renderable.ModelHeight", "Renderable.modelHeight"), createFromDreambot("GameObject.Uid", "GameObject.id"), createFromDreambot("GameObject.AnimableX", "GameObject.x"), createFromDreambot("GameObject.AnimableY", "GameObject.y"), createFromDreambot("GameObject.Renderable", "GameObject.renderable"), createFromDreambot("GameObject.Orientation", "GameObject.orientation"), createFromDreambot("WallObject.Uid", "WallObject.id"), createFromDreambot("WallObject.AnimableX", "WallObject.x"), createFromDreambot("WallObject.AnimableY", "WallObject.y"), createFromDreambot("WallObject.Renderable", "WallObject.renderable"), createFromDreambot("WallObject.Orientation", "WallObject.orientation"), createFromDreambot("BoundaryObject.Uid", "BoundaryObject.id"), createFromDreambot("BoundaryObject.AnimableX", "BoundaryObject.x"), createFromDreambot("BoundaryObject.AnimableY", "BoundaryObject.y"), createFromDreambot("BoundaryObject.Renderable", "BoundaryObject.renderable"), createFromDreambot("BoundaryObject.Orientation", "BoundaryObject.orientation"), createFromDreambot("FloorObject.Uid", "FloorObject.id"), createFromDreambot("FloorObject.AnimableX", "FloorObject.x"), createFromDreambot("FloorObject.AnimableY", "FloorObject.y"), createFromDreambot("FloorObject.Renderable", "FloorObject.renderable"), createFromDreambot("Character.InteractingIndex", "Actor.interacting"), createFromDreambot("Character.Animation", "Actor.animation"), createFromDreambot("Character.AnimableX", "Actor.localX"), createFromDreambot("Character.AnimableY", "Actor.localY"), createFromDreambot("Character.Frame1", "Actor.frameOne"), createFromDreambot("Character.Frame2", "Actor.frameTwo"), createFromDreambot("Character.Orientation", "Actor.orientation"), createFromDreambot("Character.WalkingQueueSize", "Actor.queueSize"), createFromDreambot("Character.WalkingQueueX", "Actor.queueX"), createFromDreambot("Character.WalkingQueueY", "Actor.queueY"), createFromDreambot("Character.HealthBars", "Actor.healthBars"), createFromDreambot("Iterable.node", "Iterable.node"), createFromDreambot("Player.Players", "Client.players"), createFromDreambot("Player.CombatLevel", "Player.level"), createFromDreambot("Player.Local", "Client.localPlayer"), createFromDreambot("Player.Name", "Player.name"), createFromDreambot("Player.DestinationX", "Client.destinationX"), createFromDreambot("Player.DestinationY", "Client.destinationY"), createFromDreambot("Player.Composite", "Player.composite"), createFromDreambot("Player.Model", "Player.model"), createFromDreambot("PlayerComposite.Appearance", "PlayerComposite.appearance"), createFromDreambot("CollisionMap.CollisionFlags", "CollisionMap.flags"), createFromDreambot("Canvas.component", "Canvas.component"), createFromDreambot("Config.Values", "Client.gameSettings"), createFromDreambot("Client.LoginState", "Client.gameState"), createFromDreambot("Client.loginScreenId", "Client.loginState"), createFromDreambot("Client.lastClickX", "Client.lastClickX"), createFromDreambot("Client.lastClickY", "Client.lastClickY"), createFromDreambot("Client.LastActionDifference", "Client.lastActionDifference"), createFromDreambot("Client.LastActionMod", "Client.lastActionDifferenceMod"), createFromDreambot("Client.ClickModifier", "Client.clickModifier"), createFromDreambot("Client.MapAngle", "Client.mapAngle"), createFromDreambot("Character.HitCycles", "Actor.hitCycles"), createFromDreambot("GameConfig.RoofsEnabled", "SettingsClass.roofsEnabled"), createFromDreambot("GameConfig.ResizableMode", "SettingsClass.resizableMode"), createFromDreambot("Client.message0", "Client.message0"), createFromDreambot("Client.message1", "Client.message1"), createFromDreambot("Client.message2", "Client.message2"), createFromRunelite("Client.LastAction", "MouseHandler.MouseHandler_lastPressedTimeMillis"), createFromDreambot("Client.GameConfig", "Client.settings"), createFromDreambot("Client.GameConfigObject", "Client.settingsObject"), createFromDreambot("Client.SpellSelected", "Client.isSpellSelected"), createFromDreambot("Client.SelectedSpell", "Client.selectedSpellName"), createFromDreambot("Client.PlayerIndex", "Client.playerIndex"), createFromDreambot("Client.CurrentLevelArray", "Client.level"), createFromDreambot("Client.ExperienceArray", "Client.experience"), createFromDreambot("Client.GameTick", "Client.gameCycle"), createFromDreambot("Client.RealSkillLevelArray", "Client.realLevel"), createFromDreambot("Client.SelectionState", "Client.selectionState"), createFromDreambot("Client.SelectedItemId", "Client.selectedItemID"), createFromDreambot("Client.SelectedItemIndex", "Client.selectedItemIndex"), createFromDreambot("Client.TileFlags", "Client.tileSettings"), createFromDreambot("Client.CollisionMaps", "Client.collisionMaps"), createFromDreambot("Client.Keyboard", "Client.keyboard"), createFromDreambot("Client.Mouse", "Client.mouse"), createFromDreambot("Client.Plane", "Client.plane"), createFromDreambot("Client.TileHeights", "Client.tileHeights"), createFromDreambot("Client.CurrentWorld", "Client.currentWorld"), createFromDreambot("Client.IdleTime", "Client.idleTime"), createFromDreambot("Client.BaseX", "Client.baseX"), createFromDreambot("Client.BaseY", "Client.baseY"), createFromDreambot("Client.Password", "Client.password"), createFromDreambot("Client.Username", "Client.username"), createFromDreambot("Client.Canvas", "Client.canvas")};
        Hook[] var1 = hooks;
        int var2 = hooks.length;

        for (int var3 = 0; var3 < var2; ++var3) {
            Hook hook = var1[var3];
            if (hook != null) {
                Hooks.hooks.put(hook.realName, hook);
            }
        }

    }

    private static void initializeHooksRl() {
        Hook[] hooks = new Hook[]{create("Client.lowCpuEnabled", "client.lowCpuEnabled"), create("Client.lockLowCpuUntil", "client.lockLowCpuUntil"), create("Client.loginAccountState", "ci aq 1768123277"), createFromRunelite("Client.processMenuAction", "SecureRandomCallable.menuAction()"), createFromRunelite("Client.switchToWorld", "Canvas.changeWorld()"), createClassFromRunelite("GameShell.renderGame", "GameShell.graphicsTick()"), createClassFromRunelite("MachineInfo", "DesktopPlatformInfoProvider"), createFromRunelite("Client.lowMemory", "Client.isLowDetail"), createFromRunelite("Scene.drawTile", "Scene.drawTile()"), createFromRunelite("Scene.menuOpen", "Scene.menuOpen()"), createFromRunelite("NpcComposite.RealIds", "NPCDefinition.transforms"), createFromRunelite("Region.minLevel", "Scene.minPlane"), createFromRunelite("GameShell.instance", "GameShell.gameShell"), createFromRunelite("Character.npcCycle", "Actor.npcCycle"), createFromRunelite("World.playerCount", "World.population"), createFromRunelite("World.type", "World.properties"), createFromRunelite("World.id", "World.id"), createFromRunelite("MachineInfo.instance", "Client.platformInfoProvider"), createFromRunelite("Stream.writeInt", "Buffer.writeShort()"), createFromRunelite("SocketWrapper.sendPacket", "PacketWriter.addNode()"), createFromRunelite("SocketWrapper.isaacCipher", "PacketWriter.isaacCipher"), createFromRunelite("PacketHolder.packet", "PacketBufferNode.packetBuffer"), createFromRunelite("HealthBar.data", "HealthBar.updates"), createFromRunelite("HealthBarData.currentHealth", "HealthBarUpdate.health"), createFromRunelite("EncryptedStream.isaac", "PacketBuffer.isaacCipher"), createFromRunelite("Client.worlds", "Username.World_worlds"), createFromRunelite("Client.zoomExact", "Client.viewportZoom"), createFromRunelite("Client.socketWrapper", "Client.packetWriter"), createFromRunelite("Client.GameCycle", "Client.cycle"), createFromRunelite("Stream.position", "Buffer.offset"), createFromRunelite("Stream.byteArray", "Buffer.array"), createFromRunelite("GameShell.crashed", "GameShell.resizeCanvasNextFrame"), createFromRunelite("GrandExchangeItem.Id", "GrandExchangeOffer.id"), createFromRunelite("GrandExchangeItem.Amount", "GrandExchangeOffer.totalQuantity"), createFromRunelite("GrandExchangeItem.State", "GrandExchangeOffer.state"), createFromRunelite("GrandExchangeItem.Price", "GrandExchangeOffer.unitPrice"), createFromRunelite("GrandExchangeItem.Items", "Client.grandExchangeOffers"), createFromRunelite("GroundItem.Id", "TileItem.id"), createFromRunelite("GroundItem.Amount", "TileItem.quantity"), createFromRunelite("GroundItems.List", "Client.groundItems"), createFromRunelite("LinkedList.Tail", "NodeDeque.sentinel"), createFromRunelite("LinkedList.Tail", "NodeDeque.clear()"), createFromRunelite("LinkedList.Current", "NodeDeque.current"), createFromRunelite("Menu.ActionNames", "Client.menuTargets"), createFromRunelite("Menu.Actions", "Client.menuActions"), createFromRunelite("Menu.Count", "Client.menuOptionsCount"), createFromRunelite("Menu.Height", "WorldMapData_1.menuHeight"), createFromRunelite("Menu.Opcodes", "Client.menuOpcodes"), createFromRunelite("Menu.Options", "Client.menuTargets"), createFromRunelite("Menu.Variable", "Client.menuIdentifiers"), createFromRunelite("Menu.Visible", "Client.isMenuOpen"), createFromRunelite("Menu.Width", "KeyHandler.menuWidth"), createFromRunelite("Menu.X", "MusicPatchNode.menuX"), createFromRunelite("Menu.XInteractions", "Client.menuArguments1"), createFromRunelite("Menu.Y", "TextureProvider.menuY"), createFromRunelite("Menu.YInteractions", "Client.menuArguments2"), createFromRunelite("HashTable.Size", "NodeHashTable.size"), createFromRunelite("WidgetNode.Uid", "InterfaceParent.group"), createFromRunelite("WidgetNode.Cache", "Client.interfaceParents"), createFromRunelite("Node.Uid", "Node.key"), createFromRunelite("Node.Next", "Node.next"), createFromRunelite("Node.Previous", "Node.previous"), createFromRunelite("Widget.X", "Widget.x"), createFromRunelite("Widget.Y", "Widget.y"), createFromRunelite("Widget.Widgets", "Widget.Widget_interfaceComponents"), createFromRunelite("Widget.Text", "Widget.text"), createFromRunelite("Widget.X", "Widget.x"), createFromRunelite("Widget.Y", "Widget.y"), createFromRunelite("Widget.Width", "Widget.width"), createFromRunelite("Widget.Height", "Widget.height"), createFromRunelite("Widget.ParentUid", "Widget.parentId"), createFromRunelite("Widget.Hidden", "Widget.isHidden"), createFromRunelite("Widget.Index", "Widget.rootIndex"), createFromRunelite("Widget.WidgetBoundsX", "Client.rootWidgetXs"), createFromRunelite("Widget.WidgetBoundsY", "Client.rootWidgetYs"), createFromRunelite("Widget.Type", "Widget.type"), createFromRunelite("Widget.Id", "Widget.id"), createFromRunelite("Widget.ItemId", "Widget.itemId"), createFromRunelite("Widget.ItemAmount", "Widget.itemQuantity"), createFromRunelite("Widget.ItemIds", "Widget.itemIds"), createFromRunelite("Widget.ItemAmounts", "Widget.itemQuantities"), createFromRunelite("Widget.Children", "Widget.children"), createFromRunelite("Widget.ScrollX", "Widget.scrollX"), createFromRunelite("Widget.ScrollY", "Widget.scrollY"), createFromRunelite("Widget.scrollMax", "Widget.scrollHeight"), createFromRunelite("Widget.parent", "Widget.parent"), createFromRunelite("Widget.Actions", "Widget.actions"), createFromRunelite("Widget.TextureId", "Widget.spriteId2"), createFromRunelite("Widget.LoopCycle", "Widget.cycle"), createFromRunelite("Widget.textColor", "Widget.color"), createFromRunelite("NpcComposite.Id", "NPCDefinition.id"), createFromRunelite("NpcComposite.Name", "NPCDefinition.name"), createFromRunelite("NpcComposite.Actions", "NPCDefinition.actions"), createFromRunelite("Projectile.X", "Projectile.x"), createFromRunelite("Projectile.Y", "Projectile.y"), createFromRunelite("Projectile.ProjectileList", "Client.projectiles"), createFromRunelite("Projectile.ModelHeight", "Projectile.accelerationZ"), createFromRunelite("Projectile.id", "Projectile.id"), createFromRunelite("Npc.LocalNpcs", "Client.npcs"), createFromRunelite("Npc.Composite", "NPC.definition"), createFromRunelite("Model.IndicesLength", "Model.indicesCount"), createFromRunelite("Model.IndicesX", "Model.resetBounds()"), createFromRunelite("Model.IndicesX", "Model.indices1"), createFromRunelite("Model.IndicesY", "Model.indices2"), createFromRunelite("Model.IndicesZ", "Model.indices3"), createFromRunelite("Model.VectorSkin", "Model.draw0()"), createFromRunelite("Model.VectorSkin", "Model.vertexLabels"), createFromRunelite("Model.VerticesLength", "Model.calculateBoundingBox()"), createFromRunelite("Model.VerticesLength", "Model.verticesCount"), createFromRunelite("Model.VerticesX", "Model.calculateBoundsCylinder()"), createFromRunelite("Model.VerticesX", "Model.verticesX"), createFromRunelite("Model.VerticesY", "Model.verticesY"), createFromRunelite("Model.VerticesZ", "Model.verticesZ"), createFromRunelite("Camera.Yaw", "WorldMapData_1.cameraYaw"), createFromRunelite("Camera.X", "UrlRequester.cameraX"), createFromRunelite("Camera.Y", "GrandExchangeOfferAgeComparator.cameraZ"), createFromRunelite("ItemLayer.bottom", "TileItemPile.first"), createFromRunelite("ItemLayer.height", "TileItemPile.height"), createFromRunelite("ItemLayer.middle", "TileItemPile.second"), createFromRunelite("ItemLayer.plane", "TileItemPile.tileHeight"), createFromRunelite("ItemLayer.top", "TileItemPile.third"), createFromRunelite("ItemLayer.x", "TileItemPile.x"), createFromRunelite("ItemLayer.y", "TileItemPile.y"), createFromRunelite("RegionTile.ItemLayer", "Tile.tileItemPile"), createFromRunelite("RegionTile.X", "Tile.x"), createFromRunelite("RegionTile.Y", "Tile.y"), createFromRunelite("RegionTile.Z", "Tile.plane"), createFromRunelite("RegionTile.FloorObject", "Tile.floorDecoration"), createFromRunelite("RegionTile.GameObjects", "Tile.gameObjects"), createFromRunelite("RegionTile.BoundaryObject", "Tile.boundaryObject"), createFromRunelite("RegionTile.WallObject", "Tile.wallDecoration"), createFromRunelite("Region.Region", "WorldMapArea.scene"), createFromRunelite("Region.Tiles", "Scene.tiles"), createFromRunelite("Region.Tiles", "Scene.addTile()"), createFromRunelite("Region.FocusedX", "Scene.getWallDecorationTag()"), createFromRunelite("Region.FocusedX", "Scene.Scene_selectedX"), createFromRunelite("Region.FocusedY", "Scene.getGameObjectTag()"), createFromRunelite("Region.FocusedY", "Scene.Scene_selectedY"), createFromRunelite("Renderable.ModelHeight", "Entity.height"), createFromRunelite("GameObject.Uid", "GameObject.tag"), createFromRunelite("GameObject.AnimableX", "GameObject.centerX"), createFromRunelite("GameObject.AnimableY", "GameObject.centerY"), createFromRunelite("GameObject.Renderable", "GameObject.entity"), createFromRunelite("GameObject.Orientation", "GameObject.orientation"), createFromRunelite("WallObject.Uid", "WallDecoration.tag"), createFromRunelite("WallObject.AnimableX", "WallDecoration.x"), createFromRunelite("WallObject.AnimableY", "WallDecoration.y"), createFromRunelite("WallObject.Renderable", "WallDecoration.entity1"), createFromRunelite("WallObject.Orientation", "WallDecoration.orientation2"), createFromRunelite("BoundaryObject.Uid", "BoundaryObject.tag"), createFromRunelite("BoundaryObject.AnimableX", "BoundaryObject.x"), createFromRunelite("BoundaryObject.AnimableY", "BoundaryObject.y"), createFromRunelite("BoundaryObject.Renderable", "BoundaryObject.entity1"), createFromRunelite("BoundaryObject.Orientation", "BoundaryObject.orientationA"), createFromRunelite("FloorObject.Uid", "FloorDecoration.tag"), createFromRunelite("FloorObject.AnimableX", "FloorDecoration.x"), createFromRunelite("FloorObject.AnimableY", "FloorDecoration.y"), createFromRunelite("FloorObject.Renderable", "FloorDecoration.entity"), createFromRunelite("Character.InteractingIndex", "Actor.targetIndex"), createFromRunelite("Character.Animation", "Actor.sequence"), createFromRunelite("Character.AnimableX", "Actor.x"), createFromRunelite("Character.AnimableY", "Actor.y"), createFromRunelite("Character.Frame1", "Actor.sequenceFrame"), createFromRunelite("Character.Frame2", "Actor.movementFrame"), createFromRunelite("Character.Orientation", "Actor.orientation"), createFromRunelite("Character.WalkingQueueSize", "Actor.pathLength"), createFromRunelite("Character.WalkingQueueX", "Actor.pathX"), createFromRunelite("Character.WalkingQueueY", "Actor.pathY"), createFromRunelite("Character.HealthBars", "Actor.healthBars"), createFromRunelite("Player.Players", "Client.players"), createFromRunelite("Player.CombatLevel", "Player.combatLevel"), createFromRunelite("Player.Name", "Player.username"), createFromRunelite("Player.DestinationX", "Client.destinationX"), createFromRunelite("Player.DestinationY", "Client.destinationY"), createFromRunelite("Player.Composite", "Player.appearance"), createFromRunelite("Player.Model", "Player.model0"), createFromRunelite("PlayerComposite.Appearance", "PlayerAppearance.equipment"), createFromRunelite("CollisionMap.CollisionFlags", "CollisionMap.flags"), createFromRunelite("Canvas.component", "Canvas.component"), createFromRunelite("Config.Values", "Varps.Varps_main"), createFromRunelite("Client.LoginState", "Client.gameState"), createFromRunelite("Client.loginScreenId", "Login.loginIndex"), createFromRunelite("Client.MapAngle", "Client.camAngleY"), createFromRunelite("Character.HitCycles", "Actor.hitSplatCycles"), createFromRunelite("GameConfig.RoofsEnabled", "ClientPreferences.roofsHidden"), createFromRunelite("GameConfig.ResizableMode", "ClientPreferences.windowMode"), createFromRunelite("Client.message0", "Login.Login_response1"), createFromRunelite("Client.message1", "Login.Login_response2"), createFromRunelite("Client.message2", "Login.Login_response3"), createFromRunelite("Client.GameConfig", "Varps.Varps_main"), createFromRunelite("Client.GameConfigObject", "ScriptEvent.clientPreferences"), createFromRunelite("Client.SpellSelected", "Client.isSpellSelected"), createFromRunelite("Client.SelectedSpell", "Client.selectedSpellName"), createFromRunelite("Client.PlayerIndex", "Client.localPlayerIndex"), createFromRunelite("Client.CurrentLevelArray", "Client.currentLevels"), createFromRunelite("Client.ExperienceArray", "Client.experience"), createFromRunelite("Client.GameTick", "Client.cycle"), createFromRunelite("Client.RealSkillLevelArray", "Client.levels"), createFromRunelite("Client.SelectionState", "Client.isItemSelected"), createFromRunelite("Client.SelectedItemId", "Occluder.selectedItemId"), createFromRunelite("Client.SelectedItemIndex", "MouseRecorder.selectedItemSlot"), createFromRunelite("Client.TileFlags", "Tiles.Tiles_renderFlags"), createFromRunelite("Client.CollisionMaps", "Client.collisionMaps"), createFromRunelite("Client.Keyboard", "KeyHandler.KeyHandler_instance"), createFromRunelite("Client.Mouse", "MouseHandler.MouseHandler_instance"), createFromRunelite("Client.Plane", "Player.Client_plane"), createFromRunelite("Client.TileHeights", "Tiles.Tiles_heights"), createFromRunelite("Client.CurrentWorld", "Client.worldId"), createFromRunelite("Client.IdleTime", "MouseHandler.MouseHandler_idleCycles"), createFromRunelite("Client.BaseX", "UserComparator8.baseX"), createFromRunelite("Client.BaseY", "HealthBar.baseY"), createFromRunelite("Client.Password", "Login.Login_password"), createFromRunelite("Client.Username", "Login.Login_username"), createFromRunelite("Client.Canvas", "GameShell.canvas")};
        Hook[] var1 = hooks;
        int var2 = hooks.length;

        for (int var3 = 0; var3 < var2; ++var3) {
            Hook hook = var1[var3];
            if (hook != null) {
                Hooks.hooks.put(hook.realName, hook);
            }
        }

    }
}
